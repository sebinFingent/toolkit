{"version":3,"file":"static/js/720.544d0540.chunk.js","mappings":"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","sources":["components/box/index.js","pages/dashboard/slider/index.js"],"sourcesContent":["import React, { useEffect,useState,useRef } from 'react';\r\nimport './style.scss'; \r\nimport { SlArrowLeft,SlArrowRight } from \"react-icons/sl\";\r\n\r\nconst ImageSlider = () => {\r\n\r\n    const items=[\r\n        {item:\"1\",color:\"#e1b131\"},\r\n        {item:\"2\",color:\"#63d13b\"},\r\n        {item:\"3\",color:\"#3ecfe2\"},\r\n        {item:\"4\",color:\"#ffd2fd\"},\r\n        {item:\"5\",color:\"gray\"},\r\n\r\n    ];\r\n\r\n   const [swipeDirection, setSwipeDirection] = useState(null);\r\n   const touchStartX = useRef(null);\r\n   const c_index = useRef(null);\r\n\r\n   const[isHover,setHover]=useState(false)\r\n   \r\n   useEffect(()=>{ \r\n        start()\r\n        const interval =setInterval(()=>{\r\n            handleMove('next')\r\n        },3000)\r\n\r\n        return ()=> {clearInterval(interval);}\r\n    },[])\r\n \r\n   const handleTouchStart = (e) => {\r\n     touchStartX.current = e.touches[0].clientX;\r\n   };\r\n \r\n   const handleTouchMove = (e) => {\r\n     if (touchStartX.current !== null) {\r\n       const currentX = e.touches[0].clientX;\r\n       const deltaX = currentX - touchStartX.current;\r\n \r\n       if (deltaX > 50) {\r\n         setSwipeDirection('right');\r\n       } else if (deltaX < -50) {\r\n         setSwipeDirection('left');\r\n       }\r\n     }\r\n   };\r\n \r\n   const handleTouchEnd = () => {\r\n    if(swipeDirection === \"right\"){\r\n        handleBack();\r\n    }\r\n    if(swipeDirection === \"left\"){\r\n        handleNext();\r\n    }\r\n     touchStartX.current = null;\r\n     setSwipeDirection(null);\r\n   };\r\n  \r\n    const start = () => {\r\n        handleMove()\r\n    }\r\n\r\n    const handleNext = () => {\r\n        handleMove('next')\r\n    }\r\n\r\n    const handleBack = () => {\r\n        handleMove('back')\r\n    }\r\n\r\n    const handleMove = (action) => {\r\n        const nextIndexValue = action===\"next\"?c_index.current+1:action===\"back\"?c_index.current-1:0;\r\n        const elements = document.querySelectorAll('.carousel-item');\r\n        const counterElements = document.querySelectorAll('.counter');\r\n        elements.forEach((items)=>items.classList.remove('active'));\r\n        counterElements.forEach((items)=>items.classList.remove('active'));\r\n        c_index.current = ((nextIndexValue)%items.length+ items.length) % items.length;\r\n        elements[c_index.current].classList.add('active');\r\n        counterElements[c_index.current].classList.add('active');\r\n    }\r\n   \r\n\r\n  return (\r\n    <div className=\"carousel\" onTouchStart={handleTouchStart}>\r\n        <div className='carousel-inner'  onTouchStart={handleTouchStart}>\r\n           {\r\n               items.map(({item,color},i)=>{\r\n                    return(\r\n                        <div \r\n                            key={i} \r\n                            className={'carousel-item active'} \r\n                            style={{backgroundColor:color}} \r\n                            onTouchStart={handleTouchStart}\r\n                            onTouchMove={handleTouchMove}\r\n                            onTouchEnd={handleTouchEnd}\r\n                            // mousehover handler\r\n                            onMouseEnter={()=>{setHover(true)}}\r\n                            onMouseLeave={()=>{setHover(false)}}>\r\n                                <div className='banner'>\r\n                                    {item}\r\n                                </div>  \r\n                                <div className={`desc ${isHover?'hover':null}`}>\r\n                                    Desc for slider. Sample text for smaploingdsd sds dsdsdsd dsds d\r\n                                </div>  \r\n                        </div>\r\n                    ) \r\n                }) \r\n           }\r\n           \r\n        </div>\r\n\r\n       <div className='action-button prev' onClick={handleBack}>\r\n            <SlArrowLeft />\r\n        </div>\r\n        <div className='action-button next' onClick={handleNext}>\r\n            <SlArrowRight />\r\n        </div>\r\n        <div className='counter-block'>\r\n           { [...new Array(items.length)].map((_,activeIndex)=><div className=\"counter\" key={activeIndex}></div>)}\r\n        </div>\r\n     </div>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;","import Slider from  '../../../components/box';\r\n\r\nexport default Slider;\r\n"],"names":["ImageSlider","items","item","color","swipeDirection","setSwipeDirection","useState","touchStartX","useRef","c_index","isHover","setHover","useEffect","start","interval","setInterval","handleMove","clearInterval","handleTouchStart","e","current","touches","clientX","handleTouchMove","deltaX","handleTouchEnd","handleBack","handleNext","action","nextIndexValue","elements","document","querySelectorAll","counterElements","forEach","classList","remove","length","add","_jsxs","className","onTouchStart","children","_jsx","map","_ref","i","style","backgroundColor","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","concat","onClick","SlArrowLeft","SlArrowRight","Array","_","activeIndex"],"sourceRoot":""}